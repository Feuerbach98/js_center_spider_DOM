{"version":3,"sources":["scripts/main.js"],"names":["interval","spider","link","document","querySelector","position","x","y","direction","toTop","transferToDOM","listenDirections","toBottom","toRight","toLeft","fly","style","top","left","transform","gameCore","setInterval","xs","sort","a","b","ys","scoreCount","makeFly","randomInteger","min","max","rand","Math","random","round","transition","addEventListener","event","code","clearInterval","score","innerText"],"mappings":";AAAA,aAEA,IA+DIA,EA/DEC,EAAS,CACbC,KAAMC,SAASC,cAAc,WAC7BC,SAAU,CACRC,EAAG,GACHC,EAAG,IAELC,UAAW,EACXC,MAAQ,WACFR,EAAOI,SAASE,EAAI,IACtBN,EAAOI,SAASE,IAChBN,EAAOO,UAAY,EACnBE,IACAC,MAGJC,SAAW,WACLX,EAAOI,SAASE,EAAI,KACtBN,EAAOI,SAASE,IAChBN,EAAOO,UAAY,IACnBE,IACAC,MAGJE,QAAU,WACJZ,EAAOI,SAASC,EAAI,KACtBL,EAAOI,SAASC,IAChBL,EAAOO,UAAY,GACnBE,IACAC,MAGJG,OAAS,WACHb,EAAOI,SAASC,EAAI,IACtBL,EAAOI,SAASC,IAChBL,EAAOO,UAAY,IACnBE,IACAC,OAKAI,EAAM,CACVb,KAAMC,SAASC,cAAc,QAC7BC,SAAU,CACRC,EAAG,GACHC,EAAG,IAQP,SAASG,IACPT,EAAOC,KAAKc,MAAMC,IAAMhB,EAAOI,SAASE,EAAI,IAC5CN,EAAOC,KAAKc,MAAME,KAAOjB,EAAOI,SAASC,EAAI,IAC7CS,EAAIb,KAAKc,MAAMC,IAAMF,EAAIV,SAASE,EAAI,IACtCQ,EAAIb,KAAKc,MAAME,KAAOH,EAAIV,SAASC,EAAI,IAEvCL,EAAOC,KAAKc,MAAMG,UAA4ClB,gCAAAA,OAAAA,EAAOO,UAArE,QAMF,SAASY,EAASZ,GAChBR,EAAWqB,YAAYb,EAAW,IAyBpC,SAASG,IACDW,IAAAA,EAAK,CAACP,EAAIV,SAASC,EAAGL,EAAOI,SAASC,GAAGiB,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAID,IAC5DE,EAAK,CAACX,EAAIV,SAASE,EAAGN,EAAOI,SAASE,GAAGgB,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAID,IAE9DF,EAAG,GAAKA,EAAG,GAAK,GAAKI,EAAG,GAAKA,EAAG,GAAK,IACvCC,IACAC,KAIJ,SAASC,EAAcC,EAAKC,GACpBC,IAAAA,EAAOF,EAAM,GAAMG,KAAKC,UAAYH,EAAMD,EAAM,GAE/CG,OAAAA,KAAKE,MAAMH,GAvDpB/B,EAAOC,KAAKc,MAAMG,UAAlB,wBACAJ,EAAIb,KAAKc,MAAMG,UAAf,wBACAlB,EAAOC,KAAKc,MAAMoB,WAAa,OAU/B1B,IAQAP,SAASkC,iBAAiB,UAAW,SAASC,GACzB,YAAfA,EAAMC,OACRC,cAAcxC,GACdoB,EAASnB,EAAOQ,QAGC,cAAf6B,EAAMC,OACRC,cAAcxC,GACdoB,EAASnB,EAAOW,WAGC,eAAf0B,EAAMC,OACRC,cAAcxC,GACdoB,EAASnB,EAAOY,UAGC,cAAfyB,EAAMC,OACRC,cAAcxC,GACdoB,EAASnB,EAAOa,WAoBpB,IAAM2B,EAAQtC,SAASC,cAAc,UAErC,SAASuB,IACPc,EAAMC,YAGR,SAASd,IACPb,EAAIV,SAASE,EAAIsB,EAAc,EAAG,IAClCd,EAAIV,SAASC,EAAIuB,EAAc,EAAG","file":"main.c086b40d.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst spider = {\n  link: document.querySelector('.spider'),\n  position: {\n    x: 50,\n    y: 50,\n  },\n  direction: 0,\n  toTop() {\n    if (spider.position.y > 5) {\n      spider.position.y--;\n      spider.direction = 0;\n      transferToDOM();\n      listenDirections();\n    }\n  },\n  toBottom() {\n    if (spider.position.y < 95) {\n      spider.position.y++;\n      spider.direction = 180;\n      transferToDOM();\n      listenDirections();\n    }\n  },\n  toRight() {\n    if (spider.position.x < 95) {\n      spider.position.x++;\n      spider.direction = 90;\n      transferToDOM();\n      listenDirections();\n    }\n  },\n  toLeft() {\n    if (spider.position.x > 5) {\n      spider.position.x--;\n      spider.direction = 270;\n      transferToDOM();\n      listenDirections();\n    }\n  },\n};\n\nconst fly = {\n  link: document.querySelector('.fly'),\n  position: {\n    x: 30,\n    y: 5,\n  },\n};\n\nspider.link.style.transform = `translate(-50%, -50%)`;\nfly.link.style.transform = `translate(-50%, -50%)`;\nspider.link.style.transition = '0.2s';\n\nfunction transferToDOM() {\n  spider.link.style.top = spider.position.y + '%';\n  spider.link.style.left = spider.position.x + '%';\n  fly.link.style.top = fly.position.y + '%';\n  fly.link.style.left = fly.position.x + '%';\n  // eslint-disable-next-line max-len\n  spider.link.style.transform = `translate(-50%, -50%) rotate(${spider.direction}deg)`;\n}\ntransferToDOM();\n\nlet interval;\n\nfunction gameCore(direction) {\n  interval = setInterval(direction, 50);\n}\n\ndocument.addEventListener('keydown', function(event) {\n  if (event.code === 'ArrowUp') {\n    clearInterval(interval);\n    gameCore(spider.toTop);\n  }\n\n  if (event.code === 'ArrowDown') {\n    clearInterval(interval);\n    gameCore(spider.toBottom);\n  }\n\n  if (event.code === 'ArrowRight') {\n    clearInterval(interval);\n    gameCore(spider.toRight);\n  }\n\n  if (event.code === 'ArrowLeft') {\n    clearInterval(interval);\n    gameCore(spider.toLeft);\n  }\n});\n\nfunction listenDirections() {\n  const xs = [fly.position.x, spider.position.x].sort((a, b) => b - a);\n  const ys = [fly.position.y, spider.position.y].sort((a, b) => b - a);\n\n  if (xs[0] - xs[1] < 6 && ys[0] - ys[1] < 6) {\n    scoreCount();\n    makeFly();\n  }\n}\n\nfunction randomInteger(min, max) {\n  const rand = min - 0.5 + Math.random() * (max - min + 1);\n\n  return Math.round(rand);\n}\n\nconst score = document.querySelector('.score');\n\nfunction scoreCount() {\n  score.innerText++;\n}\n\nfunction makeFly() {\n  fly.position.y = randomInteger(5, 95);\n  fly.position.x = randomInteger(5, 95);\n}\n"]}